name: Release
on:
  push:
    branches: [main]
    paths:
      - "package.json"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    env:
      NODE_GYP_FORCE_PYTHON: "python3"
      npm_config_node_gyp: "/usr/local/lib/node_modules/node-gyp/bin/node-gyp.js"
      npm_config_target: "32.0.0"
      npm_config_runtime: "electron"
      npm_config_arch: "x64"
      npm_config_target_arch: "x64"
      npm_config_disturl: "https://electronjs.org/headers"
      npm_config_python: "python3"
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libsecret-1-dev gcc g++ make libarchive-tools rpm fakeroot

      - name: Install dependencies
        run: |
          sudo npm install -g node-gyp@9.4.0
          npm install
          sudo npm install -g electron@32.0.0 electron-builder
          npm rebuild sqlite3 --build-from-source

      - name: Set 7zip permissions
        run: |
          sudo chmod +x /usr/local/lib/node_modules/electron-builder/node_modules/7zip-bin/linux/x64/7za

      - name: Get version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Build Linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: false
        run: |
          npm run build
          electron-builder --linux --x64

      - name: Get previous version
        id: get_previous_version
        run: |
          git fetch --tags
          PREV_TAG=$(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1))
          echo "previous_version=${PREV_TAG#v}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          name: ${{ steps.get_version.outputs.version }}
          tag_name: v${{ steps.get_version.outputs.version }}
          body: |
            **Full Changelog**: https://github.com/dclausen01/bbzcloud-2/compare/v${{ steps.get_previous_version.outputs.previous_version }}...v${{ steps.get_version.outputs.version }}
          files: |
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*.pacman

  build-mac:
    needs: build-linux
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          npm install
          sudo npm install -g electron@32.0.0 electron-builder
          npm rebuild sqlite3 --build-from-source

      - name: Build Mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: false
        run: |
          npm run build
          electron-builder --mac --x64 --arm64

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          tag_name: v${{ needs.build-linux.outputs.version }}
          files: dist/*.dmg

  build-windows:
    needs: build-linux
    runs-on: windows-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        env:
          npm_config_build_from_source: false
        run: |
          npm install
          npm install -g electron@32.0.0 electron-builder

      - name: Build Windows
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: false
        run: |
          npm run build
          electron-builder --win --x64

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          tag_name: v${{ needs.build-linux.outputs.version }}
          files: dist/*.exe
